home.js
import React, {useState} from 'react';


import  { AppBar, Box, Toolbar, Container, Tabs, Tab, Grid, Typography, Paper } from '@mui/material';

                         

/////just trying to get the skeleton sone first before the outfit
/////palepink: #F2949C
///// blue: #6092A6
/////yellow: #F2B749
/////red/pink:#F23838
////////#000100 black
/////white: #FFFDEA



export default function LandingPage() {

    const [value, setValue] = useState()
    return (
<>
      
            <AppBar MuiAppBar-positionFixed component={Paper} elevation={3}
            sx={{  bg: '#000100'}}>
                <Toolbar>
                    {/* ///Typography for now but i plan on designing the logo for us */}
                    <Typography>
                        OnlyDevs*
                    </Typography>
                    <Box  sx={{ }}>

                    <Tabs textcolor='#FFFDEA' 
                    value={value} 
                    onclick={(e, value)=> setValue(value) } 
                    indicatorColor=''>
                        <Tab  label="ðŸªº Home"/>
                        <Tab  label="ðŸ‘‹ About Us"/>
                        <Tab  label="ðŸ’–ðŸ”¥ Projects"/>
                        <Tab  label="ðŸ’» Devs"/>
                    </Tabs>
                        </Box>

                    <button sx={{ marginLeft: 'auto'}} variant="contained">SignIn  {''}</button>
                    <button sx={{ marginLeft: '8px'}}  variant="contained">SignUp</button>
                </Toolbar>

            </AppBar>
        
            </>

        
    )
}


    //     <Paper  sx={{
    //         mt: '200px'
    //     }}
    //     variant= 'outlined' square elevation={3}>
    // <div sx={{
    //     display: 'flex'
    //  }}> 
    //  <ul>
    //     <li> fuck you, mui can suck dinky</li>
    //  </ul>

    //  </div>

    //     </Paper>



    app.js



    import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';

import Home from './Pages/Home';
import Hero from './Pages/Hero';
// import Login from './Pages/Login';
// import Signup from './Pages/Signup';


const client = new ApolloClient({
  uri: '/graphql',
  cache: new InMemoryCache(),
});

function App() {
  return (
   <ApolloProvider client={client}>
      <Router>
        <Routes>
          <Route path="/" element={<Home />} />
          {/* <Route path="/login" element={<Login />} /> */}
          <Route path="/hero" element={<Hero/>} />
          <Route path="/home" element={<Home/>} />
          {/* <Route path="/hero" element={<Hero/>} /> */}
          {/* <Route path="/signup" element={<Signup />} /> */}
        </Routes>
      </Router> 
   
   </ApolloProvider> 
  );
}

export default App;


//////////////////////////////////////// custom button// /////////////////////////////////
const CustomButton1 = styled(Button)(({theme})=>({
//   backgroundColor: '#F2B749',
// margin: 5,
// color: '#FFFDEA',
// '&:hover': {
// backgroundColor:'#F2949C'
// },
// "&:disabled": {
// backgroundColor: 'gray',
// color: 'white'
// },
// }))
// return (
//   <div>
// <Button variant="text">Text</Button>
// <Button 

// variant="contained" color="primary">Create New Project</Button>
// <Button variant="contained" color="secondary">SignUp</Button>

// <Button variant="outlined">SignIn</Button>
// {
// /* There is already an h1 in the page, let's not duplicate it. */
// }
// <Typography variant="h1" component="h2">
// h1. Heading
// </Typography>;
// <CustomButton1>wtf</CustomButton1>

//   </div>
// )


///////////////////////////////aside stringify avatar names regexto icon avatar
   function stringToColor(string: string) {
    let hash =0;
    let i;

    for (i = 0; i <string.length; i += 1) {
        hash = string.charCodeAt(i) + ((hash << 5)) - hash;
    }
    let color = '#';
for (i = 0; i < 3; i +=1) {
    const value = (hash >> (i * 8)) & 0xff;
    color += '00${value.toString(16)}'.slice(-2);
}
return color;
}

function stringAvatar(name: string) {
    return {
        sx: {
            bgcolor: stringToColor(name),
        },
        children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,
    }
}
   



   /////////////////////////
modal////////////
<FormControl
              fullWidth
              sx={{
                mt: 2,
              }}
            >
<FormControl
              fullWidth
              sx={{
                mt: 2,
              }}
            >
              <InputLabel id="language-dropdown">Languages</InputLabel>
              <Select
                id="select-languages"
                // value={Language}
                // label="Language"
                // onChange={handleChange}
              >
                <MenuItem value={1}>Javascript</MenuItem>
                <MenuItem value={2}>Python</MenuItem>
                <MenuItem value={3}>Java</MenuItem>
                <MenuItem value={4}>Go</MenuItem>
                <MenuItem value={5}>Kotlin</MenuItem>
                <MenuItem value={6}>PHP</MenuItem>
                <MenuItem value={7}>C#</MenuItem>
                <MenuItem value={8}>Swift</MenuItem>
                <MenuItem value={9}>R</MenuItem>
                <MenuItem value={10}>Ruby</MenuItem>
                <MenuItem value={11}>C and C ++</MenuItem>
                <MenuItem value={12}>Matlab</MenuItem>
                <MenuItem value={13}>TypeScript</MenuItem>
                <MenuItem value={14}>Scala</MenuItem>
                <MenuItem value={15}>SQL</MenuItem>
                <MenuItem value={16}>HTML</MenuItem>
                <MenuItem value={17}>CSS</MenuItem>
                <MenuItem value={18}>NoSQL</MenuItem>
                <MenuItem value={19}>Rust</MenuItem>
                <MenuItem value={20}>Perl</MenuItem>
              </Select>
            </FormControl>
          

            <ButtonGroup
              sx={{ mt: 2 }}
              fullWidth
              variant="contained"
              aria-label="outlined primary button group"
            >
              <Button>POST</Button>
              <Button>Draft</Button>
            </ButtonGroup>